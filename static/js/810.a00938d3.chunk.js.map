{"version":3,"file":"static/js/810.a00938d3.chunk.js","mappings":"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","sources":["components/common/Modal/Modal.jsx","components/analitka/delete/styled-index.js","components/analitka/delete/index.jsx","components/analitka/post/styled-index.js","components/analitka/post/index.jsx","components/analitka/put/styled-index.js","components/analitka/put/index.jsx","components/analitka/table/index.jsx","components/analitka/index.jsx","pages/analitka/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\n\r\n\r\nfunction ModalCommon({ open, handleClose, children , width , styles , height }){\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: width,\r\n    bgcolor: \"#2F66B8\",\r\n    border: \"2px solid #2F66B8\",\r\n    boxShadow: \"0px 0px 6px 4px gray\",\r\n    borderRadius : \"10px\",\r\n    overflowY: 'auto',\r\n    height:height,\r\n    p: 2,\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style} style={styles}>{children}</Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalCommon;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    h3{\r\n        text-align: center;\r\n        font-size: 26px;\r\n    }\r\n    button{\r\n        padding: 15px;\r\n        font-size: 26px;\r\n        background-color: black;\r\n        border: 2px solid white;\r\n        border-radius: 10px;\r\n        color: white;\r\n        cursor: pointer;\r\n    }\r\n    .Buttons{\r\n        display: flex;\r\n        justify-content: space-around;\r\n        margin-top: 40px;\r\n    }\r\n`","import ModalCommon from \"../../common/Modal/Modal\"\r\nimport { Wrapper } from \"./styled-index\"\r\n\r\nfunction Delete({openDelete , handleCloseDelete,HandleDelete }) {\r\n    return(\r\n        <>\r\n    <ModalCommon  width={340} height={250} open={openDelete} handleClose={handleCloseDelete}>\r\n          <Wrapper>\r\n          <h3>Вы уверены, что хотите удалить данные?</h3>\r\n          <div className=\"Buttons\">\r\n        <button onClick={HandleDelete}>Да</button>\r\n          <button onClick={handleCloseDelete}>Нет</button>\r\n          </div>\r\n          </Wrapper>\r\n      </ModalCommon>\r\n        </>\r\n    )\r\n}\r\nexport default Delete","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    h3{\r\n        margin-bottom: 15px;\r\n        font-size: 24px;\r\n    }\r\n    input{\r\n        border: none;\r\n        padding: 15px;\r\n        border-bottom: 2px solid white;\r\n        color: white;\r\n        background-color: transparent;\r\n        margin-top: 15px;\r\n    }\r\n    input::placeholder{\r\n        color: whitesmoke;\r\n    }\r\n    input[type=\"file\"] {\r\n    display: none;\r\n}\r\nlabel{\r\n    border-style: dotted;\r\n    text-align: center;\r\n    padding: 10px 10px 15px 10px;\r\n    cursor: pointer;\r\n}\r\n.loading{\r\n    position: absolute;\r\n    text-align: center;\r\n    background-color: #FFD700;\r\n    padding-top: 20px;\r\n    padding-bottom: 25px;\r\n    width: 90%;\r\n    margin-top: 2px;\r\n}\r\n.span-download{\r\n    font-size: 22px;\r\n    position: relative;\r\n    top: 7px;\r\n    margin-right: 5px;\r\n}\r\n`","import React, { useRef } from 'react'\r\nimport CommonBtn from '../../common/CommonBtn'\r\nimport ModalCommon from '../../common/Modal/Modal'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Wrapper } from './styled-index';\r\n// import { GetClient, PostClient } from '../../../redux/client_comment';\r\nimport { AnalitikaGet, AnalitikaPost, UploadImage, UploadImagePdf } from '../../../redux/analitka';\r\nfunction AdminAddForm({Open , HandleClose}) {\r\n    const dispatch = useDispatch();\r\n    const catogeroyNameRef = useRef();\r\n    const titleUzRef = useRef();\r\n    const titleEnRef = useRef();\r\n    const titleRuRef = useRef();\r\n    const DescriptionUzRef = useRef();\r\n    const DescriptionEnRef = useRef();\r\n    const DescriptionRuRef = useRef();\r\n    const data_region = useRef();\r\n    const AnaltikaPdf = useRef();\r\n    const dataClient = useSelector(state => state.analitika.uploadImages)\r\n    const dataClientPdf = useSelector(state => state.analitika.uploadImagesPdf)\r\n    const data = useSelector(state => state.analitika)\r\n    const HandleChange =  async (e) => {\r\n      await dispatch(UploadImage(e))\r\n    }\r\n    const HandleChange2 =  async (e) => {\r\n      await dispatch(UploadImagePdf(e))\r\n    }\r\n    const HandleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const body = {\r\n          title_uz : titleUzRef.current.value,\r\n          title_en : titleEnRef.current.value,\r\n          title_ru : titleRuRef.current.value,\r\n          description_uz : DescriptionUzRef.current.value,\r\n          description_en : DescriptionEnRef.current.value,\r\n          description_ru : DescriptionRuRef.current.value,\r\n          data_date : data_region.current.value,\r\n          img : dataClient.data,\r\n          analitka_pdf : dataClientPdf.data,\r\n          category_name : catogeroyNameRef.current.value\r\n      };\r\n        await dispatch(AnalitikaPost(body))\r\n        dispatch(AnalitikaGet())\r\n        HandleClose()\r\n      }\r\n \r\n  return (\r\n    <ModalCommon height={370} width={400} open={Open} handleClose={HandleClose}>\r\n          <>\r\n          <Wrapper onSubmit={HandleSubmit}>\r\n              <h3>Аналитика добавить</h3>\r\n              {dataClient.Loading == true ? \r\n                <span className=\"loading\">loading...</span>\r\n              :<>\r\n              <input type=\"file\" id=\"file\" onChange={HandleChange}/>\r\n              <label for=\"file\" class=\"custom-file-upload\">\r\n                  <span className=\"span-download\"><ion-icon  name=\"cloud-download-outline\"></ion-icon></span>\r\n              загрузить изображение\r\n              </label>\r\n              </>}\r\n              {dataClientPdf.Loading == true ? \r\n                <span style={{marginTop:\"10px\"}} className=\"loading\">loading...</span>\r\n              :<>\r\n              <input type=\"file\" id=\"file2\" onChange={HandleChange2}/>\r\n              <label style={{marginTop:\"10px\"}} for=\"file2\" class=\"custom-file-upload\">\r\n                  <span className=\"span-download\"><ion-icon  name=\"cloud-download-outline\"></ion-icon></span>\r\n              загрузить пдф\r\n              </label>\r\n              </>}\r\n                <input type=\"text\" placeholder='отрасли имя' required ref={catogeroyNameRef} />\r\n                <input type=\"text\" placeholder='уз названия' required ref={titleUzRef} />\r\n                <input type=\"text\" placeholder='ру названия' required ref={titleRuRef} />\r\n                <input type=\"text\" placeholder='ен названия' required ref={titleEnRef} />\r\n                <input type=\"text\" placeholder='уз описания' required ref={DescriptionUzRef} />\r\n                <input type=\"text\" placeholder='ру описания' required ref={DescriptionEnRef} />\r\n                <input type=\"text\" placeholder='ен описания' required ref={DescriptionRuRef} />\r\n                <input type=\"text\" placeholder='дата газета регион' required ref={data_region} />\r\n\r\n                <CommonBtn type={\"submit\"} style={{marginTop : \"20px\"}}>Добавить</CommonBtn>\r\n             </Wrapper>\r\n          </>\r\n    </ModalCommon>\r\n  )\r\n}\r\n\r\nexport default AdminAddForm","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    h3{\r\n        text-align: center;\r\n        font-size: 26px;\r\n        margin-bottom: 20px;\r\n    }\r\n    button{\r\n        padding: 15px;\r\n        font-size: 26px;\r\n        background-color: black;\r\n        border: 2px solid white;\r\n        border-radius: 10px;\r\n        color: white;\r\n        cursor: pointer;\r\n    }\r\n    .Buttons{\r\n        display: flex;\r\n        justify-content: space-around;\r\n        margin-top: 40px;\r\n    }\r\n    input::placeholder{\r\n        color: whitesmoke;\r\n    }\r\n    input[type=\"file\"] {\r\n    display: none;\r\n}\r\nlabel{\r\n    border-style: dotted;\r\n    text-align: center;\r\n    padding: 15px 35px 18px 35px;\r\n    cursor: pointer;\r\n    width: 100%;\r\n}\r\n.loading{\r\n    position: absolute;\r\n    text-align: center;\r\n    background-color: #FFD700;\r\n    padding-top: 15px;\r\n    padding-bottom: 20px;\r\n    width: 86%;\r\n    margin-top: 2px;\r\n}\r\n.span-download{\r\n    font-size: 22px;\r\n    position: relative;\r\n    top: 7px;\r\n    margin-right: 5px;\r\n}\r\ninput{\r\n        border: none;\r\n        padding: 15px;\r\n        border-bottom: 2px solid white;\r\n        color: white;\r\n        width: 100%;\r\n        background-color: transparent;\r\n        margin-top: 15px;\r\n        margin-bottom: 20px;\r\n    }\r\n`","import { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AnalitikaGet, AnalitikaPut, UploadImage, UploadImagePdf } from \"../../../redux/analitka\";\r\nimport CommonBtn from \"../../common/CommonBtn\";\r\n// import { GetClient, PutClient } from \"../../../redux/client_comment\";\r\n// import { GetTeam, PutTeam, UploadImage } from \"../../../redux/team\";\r\nimport ModalCommon from \"../../common/Modal/Modal\";\r\nimport { Wrapper } from \"./styled-index\";\r\n\r\nfunction Put({ openPut, handleClosePut, HandlePut }) {\r\n  const dispatch = useDispatch();\r\n  const catogeroyNameRef = useRef();\r\n  const titleUzRef = useRef();\r\n  const titleEnRef = useRef();\r\n  const titleRuRef = useRef();\r\n  const DescriptionUzRef = useRef();\r\n  const DescriptionEnRef = useRef();\r\n  const DescriptionRuRef = useRef();\r\n  const data_region = useRef();\r\n\r\n  const dataClient = useSelector(state => state.analitika.uploadImages)\r\n  const dataClientPdf = useSelector(state => state.analitika.uploadImagesPdf)\r\n  const data = useSelector(state => state.analitika)\r\n  const HandleChange = async (e) => {\r\n    await dispatch(UploadImage(e));\r\n  };\r\n  const HandleChange2 = async (e) => {\r\n    await dispatch(UploadImagePdf(e));\r\n  };\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const body = {\r\n        title_uz : titleUzRef.current.value,\r\n        title_en : titleEnRef.current.value,\r\n        title_ru : titleRuRef.current.value,\r\n        description_uz : DescriptionUzRef.current.value,\r\n        description_en : DescriptionEnRef.current.value,\r\n        description_ru : DescriptionRuRef.current.value,\r\n        data_date : data_region.current.value,\r\n        img : dataClient.data,\r\n        analitka_pdf : dataClientPdf.data,\r\n        category_name : catogeroyNameRef.current.value\r\n    };\r\n    await dispatch(AnalitikaPut({ body, id: HandlePut }));\r\n    dispatch(AnalitikaGet());\r\n    handleClosePut();\r\n  };\r\n  return (\r\n    <>\r\n      <ModalCommon height={370} width={340} open={openPut} handleClose={handleClosePut}>\r\n        <Wrapper>\r\n          <h3>изменить</h3>\r\n          <form onSubmit={HandleSubmit}>\r\n          {dataClient.Loading == true ? \r\n                <span className=\"loading\">loading...</span>\r\n              :<>\r\n              <input type=\"file\" id=\"file\" onChange={HandleChange}/>\r\n              <label for=\"file\" class=\"custom-file-upload\">\r\n                  <span className=\"span-download\"><ion-icon  name=\"cloud-download-outline\"></ion-icon></span>\r\n              загрузить изображение\r\n              </label>\r\n              </>}\r\n              <p style={{marginTop : \"40px\" ,marginBottom : \"40px\"}}></p>\r\n              {dataClientPdf.Loading == true ? \r\n                <span className=\"loading\">loading...</span>\r\n              :<> \r\n              <input  type=\"file\" id=\"file2\" onChange={HandleChange2}/>\r\n              <label for=\"file2\" class=\"custom-file-upload\">\r\n                  <span className=\"span-download\"><ion-icon  name=\"cloud-download-outline\"></ion-icon></span>\r\n              загрузить пдф\r\n              </label>\r\n              </>}\r\n            {data.analitikaGet?.data.map(elem => elem.id == HandlePut ? \r\n       <>\r\n                <input type=\"text\" placeholder={elem.category_name}  ref={catogeroyNameRef} />\r\n                <input type=\"text\" placeholder={elem.title_uz}  ref={titleUzRef} />\r\n                <input type=\"text\" placeholder={elem.title_ru}   ref={titleRuRef} />\r\n                <input type=\"text\" placeholder={elem.title_en}   ref={titleEnRef} />\r\n                <input type=\"text\" placeholder={elem.description_uz}  ref={DescriptionUzRef} />\r\n                <input type=\"text\" placeholder={elem.description_en}  ref={DescriptionEnRef} />\r\n                <input type=\"text\" placeholder={elem.description_ru}  ref={DescriptionRuRef} />\r\n                <input type=\"text\" placeholder={elem.data_date}   ref={data_region} />\r\n       </>     \r\n        :null)}\r\n                <CommonBtn type={\"submit\"} style={{marginTop : \"20px\"}}>Добавить</CommonBtn>\r\n          </form>\r\n        </Wrapper>\r\n      </ModalCommon>\r\n    </>\r\n  );\r\n}\r\nexport default Put;\r\n","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Put from \"./../../../assets/image/icons-put.png\"\r\nimport Delete from \"./../../../assets/image/icons-delete.png\"\r\nimport { useSelector } from 'react-redux';\r\nexport default function TableAdd({ onClickDelete , onClickPut }) {\r\n  const ClientCommentGetState = useSelector(state => state.analitika.analitikaGet?.data)\r\n    const HeaderRows = [\r\n        {\r\n            id : 1, \r\n            title : \"Картинка\"\r\n        },\r\n        {\r\n            id : 2, \r\n            title : \"названия\"\r\n        },\r\n        {\r\n          id : 3, \r\n          title : \"описания\"\r\n      },\r\n      {\r\n        id : 4, \r\n        title : \"дата газета регион\"\r\n    },\r\n        {\r\n          id : 5, \r\n          title : \"Удалить и изминеть\",\r\n          algin : \"right\"\r\n        }\r\n    ]\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {HeaderRows.map((elem , index) =>\r\n                <>\r\n            <TableCell align={elem.algin}  key={index}>{elem.title}</TableCell>\r\n                </>\r\n            )}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {ClientCommentGetState.map((row) => (\r\n            <TableRow\r\n              key={row.id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <img src={row.img} width={60} height={60}  alt=\"\" />\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.title_ru}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.description_ru}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.data_date}\r\n              </TableCell>\r\n              <TableCell align=\"right\"><button style={{background : \"white\" , border : \"none\" , cursor :\"pointer\"}} id={row.id} onClick={onClickPut}><img id={row.id} src={Put} width={25} height={25} alt=\"\" /></button> <button style={{background : \"white\" , border : \"none\" , cursor :\"pointer\"}} id={row.id}  onClick={onClickDelete}><img id={row.id} src={Delete} width={25} height={25} alt=\"\" /></button></TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AnalitikaDelete, AnalitikaGet } from '../../redux/analitka';\r\nimport Delete from './delete';\r\nimport AdminAddForm from './post';\r\nimport Put from './put';\r\nimport TableAdd from './table';\r\nfunction AnalitkaComponent({open , handleClose}) {\r\n  const dispatch = useDispatch();\r\n  const [adminId , setAdminId] = useState();\r\n  const [openDelete , setOpenDelete] = useState(false);\r\n  const handleCloseDelete = () => setOpenDelete(false)\r\n  const handleDeleteModal = (e) => {\r\n   setAdminId(e.target.id)\r\n   setOpenDelete(true)\r\n  }\r\n  const [openPut , setOpenPut] = useState(false);\r\n  const handleClosePut = () => setOpenPut(false)\r\n  const handlePutModal = (e) => {\r\n   setAdminId(e.target.id)\r\n   setOpenPut(true)\r\n  }\r\n  const HandleDelete =  async() =>{\r\n    await dispatch(AnalitikaDelete(adminId))\r\n    dispatch(AnalitikaGet())\r\n    handleCloseDelete()\r\n  }\r\n\r\n  return (\r\n      <>\r\n      <AdminAddForm Open={open} HandleClose={handleClose}/>\r\n      <TableAdd onClickDelete={handleDeleteModal} onClickPut={handlePutModal} />\r\n      <Delete\r\n      HandleDelete={HandleDelete}\r\n      openDelete={openDelete}\r\n      handleCloseDelete={handleCloseDelete}\r\n/>\r\n<Put\r\n      HandlePut={adminId}\r\n      openPut={openPut}\r\n      handleClosePut={handleClosePut}\r\n/>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default AnalitkaComponent","import React, { useEffect, useState } from 'react'\nimport HeaderTopCommon from '../../components/common/HeaderTop'\nimport { WrapperContainer } from '../../style-App'\n// import { adminGet } from '../../redux/admin_add/index';\n// import { useDispatch } from 'react-redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AnalitkaComponent from '../../components/analitka';\nimport { AnalitikaGet } from '../../redux/analitka';\nfunction Analitka() {\n  const [open , setOpen] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(AnalitikaGet())\n  }, [])\n  \n\n\n  const handleClose = () => setOpen(false)\n  const handleOpen = () => setOpen(true)\n  return (\n    <WrapperContainer>\n      <HeaderTopCommon title={\"Аналитика\"} onClick={handleOpen} textBtn={\"Аналитика добавить\"}/>\n      <AnalitkaComponent handleClose={handleClose} open={open}/>\n    </WrapperContainer>\n  )\n}\nexport default Analitka"],"names":["open","handleClose","children","width","styles","style","position","top","left","transform","bgcolor","border","boxShadow","borderRadius","overflowY","height","p","onClose","sx","Wrapper","styled","openDelete","handleCloseDelete","HandleDelete","Modal","className","onClick","Open","HandleClose","dispatch","useDispatch","catogeroyNameRef","useRef","titleUzRef","titleEnRef","titleRuRef","DescriptionUzRef","DescriptionEnRef","DescriptionRuRef","data_region","dataClient","useSelector","state","analitika","uploadImages","dataClientPdf","uploadImagesPdf","HandleChange","e","UploadImage","HandleChange2","UploadImagePdf","HandleSubmit","preventDefault","body","title_uz","current","value","title_en","title_ru","description_uz","description_en","description_ru","data_date","img","data","analitka_pdf","category_name","AnalitikaPost","AnalitikaGet","onSubmit","Loading","type","id","onChange","for","class","name","marginTop","placeholder","required","ref","CommonBtn","openPut","handleClosePut","HandlePut","AnalitikaPut","marginBottom","analitikaGet","map","elem","TableAdd","onClickDelete","onClickPut","ClientCommentGetState","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","title","algin","index","TableCell","align","TableBody","row","scope","src","alt","background","cursor","Put","Delete","useState","adminId","setAdminId","setOpenDelete","setOpenPut","AnalitikaDelete","target","setOpen","useEffect","HeaderTop","textBtn"],"sourceRoot":""}